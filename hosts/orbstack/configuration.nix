# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, modulesPath, ... }:
# let
	# home-manager = builtins.fetchTarball {
		# url = "https://github.com/nix-community/home-manager/archive/release-24.11.tar.gz";
		# sha256 = "sha256:0qk1qn04willw5qrzfjs9b7815np8mr6ci68a2787g3q7444bdxp";
	# };
# in
{
  imports =
    [
      # Include the default lxd configuration.
      "${modulesPath}/virtualisation/lxc-container.nix"
      # Include the container-specific autogenerated configuration.
      # ./incus.nix
      # Include the OrbStack-specific configuration.
      ./orbstack.nix
      # (import "${home-manager}/nixos")
    ];

  networking.hostName = "orbstack";

  users.users.tymalik = {
    uid = 501;
    extraGroups = [ "wheel" ];

    # simulate isNormalUser, but with an arbitrary UID
    isSystemUser = true;
    group = "users";
    createHome = true;
    home = "/home/tymalik";
    homeMode = "700";
    useDefaultShell = true;
  };

  nix.settings.experimental-features = [ "nix-command" "flakes" ];
  environment.systemPackages = with pkgs; [
    # Flakes clones its dependencies through the git command,
    # so git must be installed first
    git
    vim
    curl
    wget
    tmux
  ];
  # Set the default editor to vim
  environment.variables.EDITOR = "vim";

  security.sudo.wheelNeedsPassword = false;

  # This being `true` leads to a few nasty bugs, change at your own risk!
  users.mutableUsers = false;

  time.timeZone = "America/Chicago";

  networking = {
    dhcpcd.enable = false;
    useDHCP = false;
    useHostResolvConf = false;
  };

  systemd.network = {
    enable = true;
    networks."50-eth0" = {
      matchConfig.Name = "eth0";
      networkConfig = {
        DHCP = "ipv4";
        IPv6AcceptRA = true;
      };
      linkConfig.RequiredForOnline = "routable";
    };
  };

  # Extra certificates from OrbStack.
  security.pki.certificates = [
    ''
      -----BEGIN CERTIFICATE-----
MIICDjCCAbOgAwIBAgIRAJg8JiFXTIvcxO9SUIKMcccwCgYIKoZIzj0EAwIwZjEd
MBsGA1UEChMUT3JiU3RhY2sgRGV2ZWxvcG1lbnQxHjAcBgNVBAsMFUNvbnRhaW5l
cnMgJiBTZXJ2aWNlczElMCMGA1UEAxMcT3JiU3RhY2sgRGV2ZWxvcG1lbnQgUm9v
dCBDQTAeFw0yNDA5MDYwMzEwNDhaFw0zNDA5MDYwMzEwNDhaMGYxHTAbBgNVBAoT
FE9yYlN0YWNrIERldmVsb3BtZW50MR4wHAYDVQQLDBVDb250YWluZXJzICYgU2Vy
dmljZXMxJTAjBgNVBAMTHE9yYlN0YWNrIERldmVsb3BtZW50IFJvb3QgQ0EwWTAT
BgcqhkjOPQIBBggqhkjOPQMBBwNCAASrUN71TAtGONZ0dJIfMaE0eTyAIn/hUJue
Ra8CBMfwiz4NLuoVwu4CBEnwDRNbT51A1FLXwyp0YecJABunI5pyo0IwQDAOBgNV
HQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUGbnOKonK2xuM
KYAGi4FydeE8jLQwCgYIKoZIzj0EAwIDSQAwRgIhALRneLfVUB00nX1RkCMyKNgU
BgrQmbXr9SPx5Gk+HDJ1AiEAtZM+9xk4nyQrhWyKwj2gPiOkygg6n3AVdUvLGnuL
zhY=
-----END CERTIFICATE-----

    ''
  ];

  # This option defines the first version of NixOS you have installed on this particular machine,
  # and is used to maintain compatibility with application data (e.g. databases) created on older NixOS versions.
  #
  # Most users should NEVER change this value after the initial install, for any reason,
  # even if you've upgraded your system to a new NixOS release.
  #
  # This value does NOT affect the Nixpkgs version your packages and OS are pulled from,
  # so changing it will NOT upgrade your system - see https://nixos.org/manual/nixos/stable/#sec-upgrading for how
  # to actually do that.
  #
  # This value being lower than the current NixOS release does NOT mean your system is
  # out of date, out of support, or vulnerable.
  #
  # Do NOT change this value unless you have manually inspected all the changes it would make to your configuration,
  # and migrated your data accordingly.
  #
  # For more information, see `man configuration.nix` or https://nixos.org/manual/nixos/stable/options#opt-system.stateVersion .
  system.stateVersion = "24.11"; # Did you read the comment?
}
